#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 0 1
#"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 4119 0 26 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 9 #"except-in"
0 0 4 3 1 #" "
0 0 14 3 29 #"lang/htdp-intermediate-lambda"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 14 3 5 #"#%app"
0 0 4 3 1 #" "
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 14 #"#%module-begin"
0 0 4 3 1 #" "
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 15 3 5 #"local"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 15 3 6 #"letrec"
0 0 4 3 1 #" "
0 0 14 3 6 #"image?"
0 0 4 3 1 #" "
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 14 3 2 #"if"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 9 #"prefix-in"
0 0 4 3 1 #" "
0 0 14 3 4 #"isl:"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"["
0 0 14 3 7 #"only-in"
0 0 4 3 1 #" "
0 0 14 3 29 #"lang/htdp-intermediate-lambda"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 15 3 5 #"local"
0 0 4 3 1 #" "
0 0 14 3 6 #"image?"
0 0 4 3 1 #" "
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 14 3 2 #"if"
0 0 22 3 3 #"]])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 25 #"syntax-color/scheme-lexer"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 13 #"racket/pretty"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"only-in"
0 0 4 3 1 #" "
0 0 14 3 11 #"net/sendurl"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 14 3 17 #"send-url/contents"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"only-in"
0 0 4 3 1 #" "
0 0 14 3 15 #"planet/resolver"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 14 3 19 #"resolve-planet-path"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"only-in"
0 0 4 3 1 #" "
0 0 14 3 20 #"web-server/templates"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 14 3 16 #"include-template"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"only-in"
0 0 4 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 14 3 6 #"image?"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"only-in"
0 0 4 3 1 #" "
0 0 14 3 10 #"racket/gui"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 14 3 11 #"message-box"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 15 #"syntax/toplevel"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 10 #"for-syntax"
0 0 4 3 1 #" "
0 0 14 3 11 #"racket/port"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 10 #"net/base64"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 16 #"file/convertible"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 14 #"mzlib/pconvert"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"planet"
0 0 4 3 1 #" "
0 0 14 3 16 #"dherman/json:3:0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 15 3 5 #"local"
0 0 4 3 1 #" "
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 15 3 6 #"letrec"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 10 #"rename-out"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"app-recorder"
0 0 4 3 1 #" "
0 0 14 3 5 #"#%app"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 21 #"check-expect-recorder"
0 0 4 3 1 #" "
0 0 14 3 12 #"check-expect"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 13 #"custom-define"
0 0 4 3 1 #" "
0 0 15 3 6 #"define"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 13 #"custom-lambda"
0 0 4 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 13 #"custom-lambda"
0 0 4 3 1 #" "
0 0 15 3 2 #"\316\273"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";(provide app-recorder)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 12 #"all-from-out"
0 0 4 3 1 #" "
0 0 14 3 29 #"lang/htdp-intermediate-lambda"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 10 #"rename-out"
0 0 4 3 1 #" "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 10 #"isl:define"
0 0 4 3 1 #" "
0 0 15 3 6 #"define"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 10 #"isl:lambda"
0 0 4 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 11 #"isl:require"
0 0 4 3 1 #" "
0 0 14 3 7 #"require"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 7 #"isl:and"
0 0 4 3 1 #" "
0 0 14 3 3 #"and"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 6 #"isl:or"
0 0 4 3 1 #" "
0 0 14 3 2 #"or"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 6 #"isl:if"
0 0 4 3 1 #" "
0 0 14 3 2 #"if"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 17 3 28 #";(ds-recorder define-struct)"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"isl:image?"
0 0 4 3 1 #" "
0 0 14 3 6 #"image?"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 7 #"isl:let"
0 0 4 3 1 #" "
0 0 15 3 3 #"let"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";(provide struct-accessor-procedure?)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 14 3 14 #"#%module-begin"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 39 #";the actual struct that stores our data"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 4 #"node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 4 #"func"
0 0 4 3 1 #" "
0 0 14 3 6 #"formal"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 4 3 1 #" "
0 0 14 3 6 #"actual"
0 0 4 3 1 #" "
0 0 14 3 4 #"kids"
0 0 4 3 1 #" "
0 0 14 3 5 #"linum"
0 0 4 3 1 #" "
0 0 14 3 3 #"idx"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 4 3 1 #" "
0 0 14 3 7 #"src-idx"
0 0 4 3 1 #" "
0 0 14 3 8 #"src-span"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 9 #"#:mutable"
0 0 4 11 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 7 #"wrapper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"unwrap"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"wrapper?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 13 #"wrapper-value"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"wrap"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 7 #"wrapper"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 4 3 1 #" "
0 0 19 3 7 #"\"value\""
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 3 #"src"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"box"
0 0 4 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 42 #";creates a node with no result or children"
0 0 4 29 1 #"\n"
0 0 17 3 50 #";takes a name, a formals list, and an actuals list"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 4 #"func"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 14 3 3 #"s-i"
0 0 4 3 1 #" "
0 0 14 3 3 #"s-s"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"node"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 4 #"func"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"no-result"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 14 3 3 #"s-i"
0 0 4 3 1 #" "
0 0 14 3 3 #"s-s"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";adds a kid k to node n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-kid"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 14 #"set-node-kids!"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"k"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-kids"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";the current definition we are in"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"current-call"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-parameter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"top-level"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"topCENode"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 12 #"CE-top-level"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"current-linum"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-parameter"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"current-idx"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-parameter"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"current-span"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-parameter"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"current-fun"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-parameter"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 16 #"current-app-call"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-parameter"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"correct-ce-hash"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"add-to-hash"
0 0 4 3 1 #" "
0 0 14 3 1 #"h"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 14 3 3 #"idx"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"hash-set!"
0 0 4 3 1 #" "
0 0 14 3 1 #"h"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 3 #"idx"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 17 3 4 #"#|  "
0 0 17 29 1 #"\n"
0 0 17 3 44 #"             (set-add (hash-ref h key (set))"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"                            (list idx span))))|#"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"check-expect-recorder"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"with-syntax"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 5 #"linum"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-line"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 3 #"idx"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"syntax-position"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 4 #"span"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-span"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 2 #"ce"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 12 #"check-expect"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 6 #"actual"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"actual"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 8 #"expected"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"expected"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 11 #"syntax-case"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 14 3 9 #"actualStx"
0 0 4 3 1 #" "
0 0 14 3 11 #"expectedStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 20 3 2 #"#`"
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ce"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 14 3 5 #"linum"
0 0 4 3 1 #" "
0 0 14 3 3 #"idx"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 11 #"actual-node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"actual"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 20 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"actualStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 14 3 5 #"empty"
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-line"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 9 #"actualStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 15 #"syntax-position"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 9 #"actualStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-span"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 9 #"actualStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 20 3 1 #"0"
0 0 4 29 1 #"\n"
0 0 4 3 44 #"                                            "
0 0 20 3 1 #"0"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-kid"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 4 3 1 #" "
0 0 14 3 11 #"actual-node"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 12 #"current-call"
0 0 4 3 1 #" "
0 0 14 3 11 #"actual-node"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 16 #"set-node-result!"
0 0 4 3 1 #" "
0 0 14 3 11 #"actual-node"
0 0 4 3 1 #" "
0 0 14 3 9 #"actualStx"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 42 #";Check if actual and expected are the same"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 11 #"node-result"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-kids"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 17 3 29 #";When ce is true, add to hash"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 5 #"datum"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"syntax-e"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 9 #"actualStx"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 15 3 4 #"when"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"pair?"
0 0 4 3 1 #" "
0 0 14 3 5 #"datum"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"func"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"datum"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"["
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"datum"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"["
0 0 14 3 3 #"ret"
0 0 4 3 1 #" "
0 0 20 3 2 #"#`"
0 0 22 3 1 #"("
0 0 14 3 11 #"add-to-hash"
0 0 4 3 1 #" "
0 0 14 3 15 #"correct-ce-hash"
0 0 4 29 1 #"\n"
0 0 4 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 4 #"func"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-result"
0 0 4 3 1 #" "
0 0 14 3 11 #"actual-node"
0 0 22 3 1 #")"
0 0 4 11 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 51 #"                                                   "
0 0 14 3 3 #"idx"
0 0 4 29 1 #"\n"
0 0 4 3 51 #"                                                   "
0 0 14 3 4 #"span"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 14 3 3 #"ret"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 17 3 35 #";When ce is false, create a ce node"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 16 #"set-node-result!"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 14 #"set-node-kids!"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-kids"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-kid"
0 0 4 3 1 #" "
0 0 14 3 9 #"topCENode"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-result"
0 0 4 3 1 #" "
0 0 14 3 11 #"actual-node"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 13 #"expected-node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"expected"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 20 3 2 #"#f"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"expectedStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 14 3 5 #"empty"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-line"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 11 #"expectedStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 15 #"syntax-position"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 11 #"expectedStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-span"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 11 #"expectedStx"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 20 3 1 #"0"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 20 3 1 #"0"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-kid"
0 0 4 3 1 #" "
0 0 14 3 11 #"parent-node"
0 0 4 3 1 #" "
0 0 14 3 13 #"expected-node"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 12 #"current-call"
0 0 4 3 1 #" "
0 0 14 3 13 #"expected-node"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"result"
0 0 4 3 1 #" "
0 0 14 3 11 #"expectedStx"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 16 #"set-node-result!"
0 0 4 3 1 #" "
0 0 14 3 13 #"expected-node"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 14 3 6 #"result"
0 0 22 3 9 #")))))])))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-for-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"lambda-body"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 20 3 2 #"#`"
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 9 #"app-call?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 3 #"fun"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"current-fun"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 9 #"app-call?"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 11 #"struct-copy"
0 0 4 3 1 #" "
0 0 14 3 4 #"node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"current-app-call"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"["
0 0 14 3 7 #"src-idx"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 15 #"syntax-position"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"["
0 0 14 3 8 #"src-span"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-span"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 26 3 2 #"#,"
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 3 #"fun"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 4 #"args"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 15 #"syntax-position"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-span"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 22 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 6 #"parent"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 9 #"app-call?"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 12 #"current-call"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 16 #"current-app-call"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-kid"
0 0 4 3 1 #" "
0 0 14 3 6 #"parent"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 12 #"current-call"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 6 #"result"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 4 #"body"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 16 #"set-node-result!"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 14 3 6 #"result"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"custom-lambda"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"syntax-case"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 20 3 2 #"#`"
0 0 22 3 1 #"("
0 0 15 3 6 #"letrec"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 26 3 2 #"#,"
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"lambda-body"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 26 3 1 #"."
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 16 #"procedure-rename"
0 0 4 3 1 #" "
0 0 26 3 2 #"#,"
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 15 3 6 #"lambda"
0 0 22 3 6 #")))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"custom-define"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"syntax-case"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"fun-expr"
0 0 4 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 20 3 2 #"#`"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"fun-expr"
0 0 4 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 26 3 2 #"#,"
0 0 22 3 1 #"("
0 0 14 3 11 #"lambda-body"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 4 #"body"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 8 #"fun-expr"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 20 3 2 #"#'"
0 0 14 3 8 #"fun-expr"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"arg-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 14 3 13 #"custom-define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"fun-expr"
0 0 4 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 2 #"id"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 65
#";records all function calls we care about - redefinition of #%app"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"app-recorder"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"syntax-case"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 4 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 4 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 11 #"with-syntax"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 5 #"linum"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-line"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"["
0 0 14 3 3 #"idx"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"syntax-position"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"["
0 0 14 3 4 #"span"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"syntax-span"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 20 3 2 #"#'"
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"fun"
0 0 4 3 1 #" "
0 0 14 3 8 #"fun-expr"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 4 #"args"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 8 #"arg-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"create-node"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"fun-expr"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 14 3 5 #"linum"
0 0 4 3 1 #" "
0 0 14 3 3 #"idx"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 6 #"result"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 13 #"current-linum"
0 0 4 3 1 #" "
0 0 14 3 5 #"linum"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 22 3 1 #"["
0 0 14 3 11 #"current-idx"
0 0 4 3 1 #" "
0 0 14 3 3 #"idx"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 22 3 1 #"["
0 0 14 3 12 #"current-span"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 22 3 1 #"["
0 0 14 3 11 #"current-fun"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 22 3 1 #"["
0 0 14 3 16 #"current-app-call"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 4 #"when"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-kids"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 16 #"set-node-result!"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 7 #"add-kid"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"current-call"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 6 #"result"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"print-right"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"node"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-formal"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-result"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-actual"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 11 #"print-right"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-kids"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 69
(
 #"; Why is this a macro and not a function?  Because make it a functio"
 #"n"
) 0 0 4 29 1 #"\n"
0 0 17 3 26 #"; affects the call record!"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"show-trace"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"print-right"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"current-call"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-base64"
0 0 4 3 1 #" "
0 0 14 3 3 #"img"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"base64-encode"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"convert"
0 0 4 3 1 #" "
0 0 14 3 3 #"img"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"png-bytes"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 4 3 1 #" "
0 0 14 3 3 #"img"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 19 3 38 #"\"data:image/png;charset=utf-8;base64,\""
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 19 #"bytes->string/utf-8"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"get-base64"
0 0 4 3 1 #" "
0 0 14 3 3 #"img"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"json-image"
0 0 4 3 1 #" "
0 0 14 3 3 #"img"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"hasheq"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 19 3 7 #"\"image\""
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 20 3 1 #"'"
0 0 14 3 3 #"src"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 4 3 1 #" "
0 0 14 3 3 #"img"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"add-item"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 9 #"next-item"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"pretty-format"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"pretty-print-columns"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-length"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-length"
0 0 4 3 1 #" "
0 0 14 3 9 #"next-item"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"6"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 20 #"pretty-print-columns"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 4 3 1 #" "
0 0 14 3 9 #"next-item"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 4 3 1 #" "
0 0 14 3 9 #"next-item"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 1 #"s"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"format-nicely"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 14 3 5 #"width"
0 0 4 3 1 #" "
0 0 14 3 7 #"literal"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 33 #";print the result string readably"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"image?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 10 #"json-image"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"open-output-string"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"out\""
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 17 3 22 #";set columns and depth"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 20 #"pretty-print-columns"
0 0 4 3 1 #" "
0 0 14 3 5 #"width"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"["
0 0 14 3 18 #"pretty-print-depth"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"["
0 0 14 3 26 #"constructor-style-printing"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"procedure?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"object-name"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"object-name"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 4 3 12 #"            "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 12 #"pretty-write"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"print-convert"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 17 3 24 #";return what was printed"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 6 #"hasheq"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 19 3 7 #"\"value\""
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 20 3 1 #"'"
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"get-output-string"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"ce-idx-span"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-func"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-result"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-actual"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"["
0 0 14 3 1 #"l"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 15 #"correct-ce-hash"
0 0 4 3 1 #" "
0 0 14 3 3 #"key"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"values"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"node->json"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 73
(
 #";calls format-nicely on the elements of the list and formats that in"
 #"to a "
) 0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 16 #";javascript list"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"format-list"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 14 3 7 #"literal"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 13 #"format-nicely"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 5 #"depth"
0 0 4 3 1 #" "
0 0 20 3 2 #"40"
0 0 4 3 1 #" "
0 0 14 3 7 #"literal"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 14 3 3 #"lst"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 10 #"let-values"
0 0 4 3 1 #" "
0 0 22 3 3 #"([("
0 0 14 3 6 #"ce-idx"
0 0 4 3 1 #" "
0 0 14 3 7 #"ce-span"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"ce-idx-span"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"hasheq"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-name"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 7 #"formals"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 11 #"format-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-formal"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 12 #"formalsShort"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 11 #"format-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-formal"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 7 #"actuals"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 11 #"format-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-actual"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 12 #"actualsShort"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 11 #"format-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-actual"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 6 #"result"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 13 #"format-nicely"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-result"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 4 3 1 #" "
0 0 20 3 2 #"40"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 11 #"resultShort"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 13 #"format-nicely"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-result"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 20 3 2 #"40"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 5 #"linum"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"node-linum"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 3 #"idx"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 8 #"node-idx"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 4 #"span"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-span"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 6 #"srcIdx"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 12 #"node-src-idx"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 7 #"srcSpan"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 13 #"node-src-span"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 8 #"children"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 10 #"node->json"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-kids"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 5 #"ceIdx"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 14 3 6 #"ce-idx"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 20 3 1 #"'"
0 0 14 3 6 #"ceSpan"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 14 3 7 #"ce-span"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 69
(
 #"; Why is this a macro and not a function?  Because make it a functio"
 #"n"
) 0 0 4 29 1 #"\n"
0 0 17 3 26 #"; affects the call record!"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"range"
0 0 4 3 1 #" "
0 0 14 3 5 #"start"
0 0 4 3 1 #" "
0 0 14 3 3 #"end"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"build-list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 3 #"end"
0 0 4 3 1 #" "
0 0 14 3 5 #"start"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 5 #"start"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"lex-port"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 14 3 6 #"actual"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"let*-values"
0 0 4 3 1 #" "
0 0 22 3 3 #"([("
0 0 14 3 3 #"str"
0 0 4 3 1 #" "
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 14 3 4 #"junk"
0 0 4 3 1 #" "
0 0 14 3 5 #"start"
0 0 4 3 1 #" "
0 0 14 3 3 #"end"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"scheme-lexer"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 2 #"[("
0 0 14 3 4 #"span"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 14 3 5 #"start"
0 0 4 3 1 #" "
0 0 14 3 3 #"end"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"str"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"\316\273\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 20 3 1 #"1"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 3 #"end"
0 0 4 3 1 #" "
0 0 14 3 5 #"start"
0 0 22 3 5 #")))])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"eof"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 5 #"empty"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"take"
0 0 4 3 1 #" "
0 0 14 3 6 #"actual"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 8 #"lex-port"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"drop"
0 0 4 3 1 #" "
0 0 14 3 6 #"actual"
0 0 4 3 1 #" "
0 0 14 3 4 #"span"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"colors"
0 0 4 3 1 #" "
0 0 14 3 3 #"src"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 3 1 #" "
0 0 14 3 6 #"append"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"andmap"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"char?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 20 3 4 #"#\\\316\273"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"hasheq"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 19 3 8 #"\"string\""
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 20 3 1 #"'"
0 0 14 3 5 #"color"
0 0 4 3 1 #" "
0 0 14 3 4 #"type"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"list->string"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 2 #"[("
0 0 14 3 6 #"image?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 6 #"hasheq"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 19 3 7 #"\"image\""
0 0 4 29 1 #"\n"
0 0 4 3 41 #"                                         "
0 0 20 3 1 #"'"
0 0 14 3 5 #"color"
0 0 4 3 1 #" "
0 0 14 3 4 #"type"
0 0 4 29 1 #"\n"
0 0 4 3 41 #"                                         "
0 0 20 3 1 #"'"
0 0 14 3 3 #"src"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 20 3 4 #"#\\\316\273"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 6 #"hasheq"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"html\""
0 0 4 29 1 #"\n"
0 0 4 3 40 #"                                        "
0 0 20 3 1 #"'"
0 0 14 3 5 #"color"
0 0 4 3 1 #" "
0 0 14 3 4 #"type"
0 0 4 29 1 #"\n"
0 0 4 3 40 #"                                        "
0 0 20 3 1 #"'"
0 0 14 3 4 #"html"
0 0 4 3 1 #" "
0 0 19 3 10 #"\"&lambda;\""
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 6 #"hasheq"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"string"
0 0 4 29 1 #"\n"
0 0 4 3 40 #"                                        "
0 0 20 3 1 #"'"
0 0 14 3 5 #"color"
0 0 4 3 1 #" "
0 0 14 3 4 #"type"
0 0 4 29 1 #"\n"
0 0 4 3 40 #"                                        "
0 0 20 3 1 #"'"
0 0 14 3 4 #"text"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 4 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 8 #"lex-port"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 10 #"let-values"
0 0 4 3 1 #" "
0 0 22 3 3 #"([("
0 0 14 3 2 #"in"
0 0 4 3 1 #" "
0 0 14 3 3 #"out"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 23 #"make-pipe-with-specials"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 15 3 3 #"for"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"src"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"char?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"out"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 13 #"write-special"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"out"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 17 #"close-output-port"
0 0 4 3 1 #" "
0 0 14 3 3 #"out"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 14 3 2 #"in"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 3 #"src"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"tree->json"
0 0 4 3 1 #" "
0 0 14 3 4 #"call"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"jsexpr->json"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"node->json"
0 0 4 3 1 #" "
0 0 14 3 4 #"call"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"code->json"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"jsexpr->json"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"colors"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"unbox"
0 0 4 3 1 #" "
0 0 14 3 3 #"src"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 17 3 1 #"#"
0 0 17 3 2 #"|("
0 0 17 3 6 #"format"
0 0 17 3 1 #" "
0 0 17 3 55
#"\"var theTrace = ~a\\nvar code = ~a\\nvar codeOffset = ~a\""
0 0 17 29 1 #"\n"
0 0 17 3 10 #"          "
0 0 17 3 1 #"("
0 0 17 3 12 #"jsexpr->json"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 10 #"node->json"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 12 #"current-call"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"          "
0 0 17 3 1 #"("
0 0 17 3 12 #"jsexpr->json"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 6 #"colors"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 5 #"unbox"
0 0 17 3 1 #" "
0 0 17 3 3 #"src"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"          "
0 0 17 3 6 #"offset"
0 0 17 3 4 #"))|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 17 #"define-for-syntax"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"print-expanded"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"~a\\n\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"local-expand"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 15 3 6 #"module"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 22 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"page"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 1 #"o"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 19 3 8 #"\" Trace\""
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 7 #"CSSPort"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"open-input-file"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"resolve-planet-path"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"planet"
0 0 24 3 1 #" "
0 0 14 3 24 #"tracer/tracer/tracer.css"
0 0 22 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 9 #"tracerCSS"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"port->string"
0 0 24 3 1 #" "
0 0 14 3 7 #"CSSPort"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 10 #"upImageSrc"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 24 3 1 #" "
0 2          13 24 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           1 384
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\31\0\0\0\31\b"
 #"\6\0\0\0\304\351\205c\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\0\atIME\a\333\a\23\21,\a\376\20Ug\0\0\1\"I"
 #"DATH\211\355\326-\216\2040\24\300\361G3\t\6\326\256\252\340\2\330\6"
 #"\tg\240\27\340,U\\\1]\207\340\22\325=FY\344\210*\322\267b\207\315"
 #"f\3122|\f\233\21\373Oj\36\201\237(\241\4\0`\1\340\n\347\365v\271"
 #"\1\357'\"\37\344\304\207\177\367z\b!\4\3224\2050\f7C=\0\340\243"
 #"\225$\t\366}\217\210\210Zk\244\224"
 #">\274\347\266\372\325H\327u\370\263\256"
 #"\353\236\213\344y\216s\345y\376\34\204"
 #"\20\202Z\353YDk\215\204\220\343HUU\263\300TUU\307\220(\212\320\30"
 #"\263\210\30c0\212\242\375\210\20b\21\230\22B\354C(\245h\255]\205Xk"
 #"\227^\351\337\21)\345*`JJ\271\ra\214\241sn\23\342\234C\306\330z"
 #"D)\265\t\230RJ\255C\312\262\334\5Lq\316=\304\373@fYv?\332"
 #"\24\347\334\233y\3100\f\207\20\245\224"
 #"7\273\334\17\352\272\2068\216\241(\n d\375I0\216#\264m\vM\323x"
 #"\327\2\370\332\223\377\343\367u\220\0\376\340\277\353\23\354\367"
 #"\223\352\6\303\34\204\0\0\0\0IEND\256B`\202"
) 0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 12 #"downImageSrc"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 24 3 1 #" "
0 2          13 24 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           1 411
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\31\0\0\0\32\b"
 #"\6\0\0\0B}\367\315\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\0\atIME\a\333\a\23\21,\a\376\20Ug\0\0\1=I"
 #"DATH\211\355\326\261j\2050\24\6\340_\211c\235\272:\273gr\24\234"
 #"\34\304\301\3070\276\206>\201/\340k\bn\256\256\202\257\220n\35,\169]"
 #"n/\275\215z\275ZK)\375!K\16\234/\34\b\211\1\340\r\300+\316\313"
 #"\23\273\0\317'\"/\346\211\315\257\371"
 #";\b\323T\323D\34\307H\222\4\214"
 #"i\345\305(\245\320\266-\312\262\234\255"
 #"K\0\364\261\3224\245#\311\262\214>"
 #"\367\3 \265q\371\276\277\371\364sq"
 #"]W\333\323\220\272\256\17!]\327\315"
 #"\356\337\214\2131F}\337\357\32U\337"
 #"\367\304\30\323\306\245!\0(\212\242]H\24E_\201e\4\0005M\363\20\320"
 #"4\315\34\260\216p\316I)\265\tPJ\21\347\374q\4\0UU\265\t\251\252"
 #"j\t\270\2178\216C\3438\256\2\3438\222\3438\373\21\0T\24\305*R\24"
 #"\305\32\260\r\261m\233\244\224\263\200\224"
 #"\222l\333>\216\0 !\304,\"\204\270\alG,\313\242a\30n\200a\30"
 #"\310\262\254\357C\0P\30\2064M\323\25Y\270x\307\20\0\344y\36\345yN"
 #"A\20l\5\b\2004.\310\377\e\377{\20\3?\360\271{\a"
 #"\24\211\270'\4\203c\206\0\0\0\0IEND\256B`\202"
) 0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 17 #"correctCEImageSrc"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 24 3 1 #" "
0 2          15 24 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\31\0\0\0\32\b"
 #"\6\0\0\0B}\367\315\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\0\atIME\a\333\a\23\21,\a\376\20Ug\0\0\2NI"
 #"DATH\211\275\226MHTQ\24\307\177\367\315W\243\316\214\r\203\203\215)"
 #"VL A\"5\270hm\213\2[\270\220\26\321\"\252eP\270h\223\21\24"
 #"\321\"0\"\212 h\323\276E\213\22l\321jP\f\25L+Z\324\344\350|"
 #"\346X\276F\337\273-&\36>\346\275"
 #"\351\3514\376w\367\334{\317\357\234\373"
 #"q\356\25\200\n\224h\234\2\356\277\200"
 #"H\3!Y\245\201\316\r\271\2676\2\201\0\261X\254>\217\2V\233\227)\246"
 #"\327\370\365m\3030g\0\t\310\341\341"
 #"aY\217\262jZ\216L\235\225\3\343\335r\340M\267<x\256U\2\31\267U"
 #"0RJ\312\345\362\266\22H\346'\30"
 #"\373x\235\325\215\242\221Q\307\351 \237"
 #"\237\27\261\204$\223I\372\373\373\359"
 #"W<\202\370\2450\235g\202U}\371\351u\0k\210S\t\5zoF\211$"
 #"\374U}\205Y\225\205G\371J \365@\342\27\303U\0E\270\360Ou0y"
 #"u\211rQ\253\17\262\357d\v]C!\223-$\"\334\353{\201\177:\206\324"
 #"\267\200w\2h\355\361\321s\305|\177\313E\215\vM78\322z\254j\274-"
 #"\304\erq\370r\230\256\241\20\236\220"
 #"\313\260\273\233\25\216\216FQ<\302\260"
 #"\351\233\222\367\243+\204\204u\341\260\335"
 #"\370\276;Q\202q\37\0\235\203A&"
 #"\257-\261\276\274\311\241\363{\361\205]"
 #"\246\261\363c9\212s\252\235+\353L"
 #"ttZ\16x\215\266\277\335\315\361\373\355\264\235hb\377\240\371\250~"
 #"}\271J\352U\355\372j\tQP\370\376z\315d\333\323\346\246w4"
) 184
(
 #"\212\3302\343wVc\361I\276&\300\26\2\225%X~\367\263\346\344\205\3079"
 #"4U\356\34\"7%3\2672\244\337Z\203\n3*\351\211\332A\374\23\2 "
 #"5\311\354\355\25\226\306\315K'u\230\177\220s\4\0\aeE\3520w7\303"
 #"FI\247\343T\0\251I\26\237\26X\373\342\274\200:\252]R\302\207\2079>"
 #"=+\240x\4\345\37\232c\200-$\221H\240\252\366\347\336N^\257\327\322n"
 #"\t\21B\340\363\371\266\r\261\223\240\3622F\340?=\277@*\225\242T2."
 #"h\326\4i\220v\347\267\"\330\205\317\335\37\261T\373"
 #"\26\367\351\232#\0\0\0\0IEND\256B`\202"
) 0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 20 #"correctCEImageSelSrc"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 24 3 1 #" "
0 2          15 24 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\31\0\0\0\32\b"
 #"\6\0\0\0B}\367\315\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\0\atIME\a\333\a\23\21,\a\376\20Ug\0\0\2eI"
 #"DATH\211\275\326KHTQ\30\300\361\377\271w\324\31\3536\223\357\262\a"
 #"\243\242Vci\204-\\h\230\224\213\210\210\26\206\21D\17\n\27Q\4B\266"
 #"\310E\213\226\355\3226\265h\221\2701\246E\266h\23\211\226$\6=0\3q"
 #"\32PK\207itt\274\367\264P\ao3W\306\261\351\333\235\357;\347\373q"
 #"8\347>\204\224\235a H\352B\263\1A\244\232\2232B\350SJ\312\232\257"
 #"\n\333\352A0\30\306\347\233\336PC"
 #"\t\314:\347\310w:\331\221\231\35\213"
 #"x\275C4\235}\2304\220\221\255R\321\232KV\225\3\0014\273ki.\252"
 #"1#+!\204 =]]\27\220}\330A\331\365,\322\266,\235\200\4\274\276"
 #"\367\326Hu\265\233\276\267m\t5\217"
 #"\30:\35#\275\364\214\17\304\324*\263"
 #"\334\0\361\221D\303\220\222\273\303\317\30"
 #"\3709\22S\363\270vq\245\244a\343"
 #"\310\243o\257b\0i\300\301\271b\356"
 #"\35iB\21\2\320I\372\n\277\364\17\321=\326g\312\03130p\303Oe\250"
 #"x\31X\212\244\220O\201q\36|\361\232r\256\364M\204:\0053\37\3031\363"
 #"-\221@d\226\216\221^\272\307\372\bDf\243\371\320\342<\355\303]D\f="
 #"\232\263)*w<g0f\342\367\262"
 #"<\223\266\17O\371\32\364\3\360\334\367"
 #"\216\373U\347\310\263;y2\372\232_\v\277Ms[J\e\361\270vZ\265\262"
 #"\330\211\2\243\241\211\350\320?7"
 #"\315\315\301\307\274\231\374L\217\317|UO\24\36\242"
 #"q{\225%`\215\30\320Pp\300\224\232\b\ah"
) 207
(
 #"\37\356\302\2202\232\313\311\320\270XrtM\300\32\1Z\312\32\251\311-_s"
 #"\361\245\222\6\354jZ\362\210M(\334"
 #"\366\234\2466\177_\334\372~\327n\352,j\t#\0\252Ph\335{\212\372\202"
 #"\n\363\"!\270Vz<!\0\22x\342\25!\270\265\347$\232\315\301\213\37\203"
 #"\250B\341Bq=\356\315y\377\16\201"
 #"\245\267\362\325\322c\234/\252#\"u"
 #"\234i\231\t\3\226H\177\377w\354\216"
 #"\313\353j\4\260\260\240\307\315\307E\244"
 #"\224\314\317/\256\e\261\n!e\347\344"
 #"\312\217\304\277\370\374\2\24\26nE\323"
 #"\354\313\202>e\332\211\246\331)/\337\266a\344\357\370o\177+\32B\237J"
 #"\241\241\375\1\247\372\264\227\213EU\32\0\0\0\0IEND\256B`\202"
) 0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 13 #"toDefImageSrc"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 24 3 1 #" "
0 2          15 24 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\31\0\0\0\31\b"
 #"\6\0\0\0\304\351\205c\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\0\atIME\a\333\a\23\21,\a\376\20Ug\0\0\2XI"
 #"DATH\211\355\226\277Kjq\30\306\37\17BB\"%\211\213KA\316!"
 #"\27064\264\364\27\b-A\4!\244C\21N-\205:74\6\25\25\r\""
 #"\264\332\26\222M\216g\313\242\242NQtK\23\324\363\271Cu\356=X\313\5"
 #"/\\n/\234\341\374x\336\317y\236\367{8_\217\244\206\244\37\352]\5\274"
 #"\357\200p\17!\267F\17\233;\365\r\371G \36\217\347\217\e~\246uA\322"
 #"\351\264NNN\324j\265t~~\256T*%I\32\37\37W\255VS\255V"
 #"\223i\232*\225JJ$\22\256F\261XL\307\307\307zyyQ\243\321P."
 #"\227s\335\277\221D,\26\3\240T*\261\264\264\304\366\3666\205B\1ILN"
 #"N\2P\251T\330\337\337\347\361\361\21"
 #"\333\266\211\307\343H\"\34\16S\257\327"
 #"\1(\227\313\354\355\355Q,\26\221\304"
 #"{\3777\310\352\352*\200#\224D\177"
 #"\177\277\v\222\311d\220\304\342\342\"\0"
 #"\311d\22I\254\254\254\0\220\315f\35m(\24r N\\\247\247\247\222\244B"
 #"\241\240t:\255@ \240z\275\336\225"
 #"\357\300\300\200\306\306\306$I\325jU"
 #"\222\234\363\303\303C\347\271\273\273\273\356"
 #"\270\f\303`~~\236\207\207\a\0...\230\230\230p9\371\250\327\327W\26"
 #"\26\0260\f\3IT*\25\0\374~"
 #"\277\343\344\267\343\227\23\333\266\265\261\261"
 #"\241\221\221\21-//+\24\nikk\313\265Z\216\216\216d\232\246|>\237"
 #"\372\372\372d\333\266$\311\262,IR4\32\355"
 #"r\356r\22\f\6]oppp\0\300\350\350"
) 194
(
 #"\250k&\301`\20\3234yzzbpp\20I\344\363y\0R\251\224\243\367"
 #"\371|\335\203___\247X,2;;\313\334\334\34\367\367\3674\233M\374~"
 #"\177\327\340\247\247\247\1X[[C\22\303\303\303\264\333m:\235\16;;;d"
 #"\263Yvww\273!333X\226\345\344nY\26\211D\342\323\325\345\365z"
 #"9;;\343\371\371\231\241\241!$1"
 #"55\305\325\325\225\243\337\334\334t \236wHXz\373Z#\221\210\f\303\320"
 #"\345\345\245:\235\316\227\31\177U\221H"
 #"D\266m\353\372\372\372\343\322\255\v"
 #"\322\243\372\376i\375\257\20\217\376\302\276\353'Xp\247"
 #"\205\362\214p\235\0\0\0\0IEND\256B`\202"
) 0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 16 #"toDefImageSelSrc"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"uri-string"
0 0 24 3 1 #" "
0 2          15 24 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\31\0\0\0\31\b"
 #"\6\0\0\0\304\351\205c\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\0\atIME\a\333\a\23\21,\a\376\20Ug\0\0\2\274I"
 #"DATH\211\355\225]H\223Q\30\307\177\357\273\305B\327r\222\237l\271E"
 #"\224\211\350\0224\205\f\"o*\207b\6\221\345\205!)D0a\242bx#"
 #",a\27\323\"\304\244\217\v1\"%\t\242\30\30*J\31\16\357,\223\314R"
 #"si.V\323\251\351\333\205\270\34o"
 #"\5\6^\24\376\257\16\207\347\371\377\236"
 #"\363\234\207s\4I\2725\a\313^6M\n\215r\25\240\210\332<\310\262[\334"
 #"<\363\237\332\202\374#\20I\222\376\332"
 #"\360W\271A\20\207\303Izz-\333\266\25\23\27g\245\276\336\t@w\3670"
 #"\6\203\25\203\301J||\25YYvZ[_\4\31\271\\c\34>lC\255"
 #".%$\244\204\212\212\ar\210\3135"
 #"\206\305\322\212Z\275\35\233-\237#G"
 #"\366\321\325\365\32\0\277\177\211\261\261\317"
 #"DEi0\231v30\360\216\202\202&^\276\34\5\300\355\366\222\231i\243\267"
 #"\367\r\311\311zrr\16\362\352\325\307\0D\271\266ho\37\0\300f;Ej"
 #"\252\21\0\237o!\250\332\334\334\24*+Ob\267?\301j\275O\177\377(\251"
 #"\251F\32\e\23717\267HE\305\tl\266|\0\246\247\277\312O\222\226\266\a"
 #"\200\274\274\3538\34N\274\336yBCU\262\376~\3712\307\340\340{\0L&"
 #"=\0\203\203\37\0000\233M\201\270\210\210\35rHvv27n\234\307\347["
 #"\304bi%1\361\n\235\235CA\200\252\2526\264\332K\264\265\rP_\177\226"
 #"\214\214\275\0LNz\0HJ\322\313\212\n"
 #"\202\210\242@i\351Q\336\276\255\243\256\3564"
) 294
(
 #"\323\323_),l\16\232\226c\307\22\210\217\217\301\357_ba\341;\242(\0"
 #"\20\31\251\1`xx\352\317\220\331Y\37\0aa!\224\227\37\307l611"
 #"\341ad\344\323:\310\1z{\253\330\277?\232\332\332Gx<\2539\t\t\261"
 #"\0\364\364\f\ab\375\376%9\244\246"
 #"\346!\271\271\327hn\356\246\251\251\213\316\316!T*%11aAU\205\207"
 #"\207R]m\306\353\235\307n\177\n@I\311Q\24\n\221\262\262{\234;\327D"
 #"e\345\3\212\212n\311!))q\364\365\215P\\|\207\213\27\357\"\212\2\267"
 #"o_@\255\226_\376\2313\2070\30v\321\320\340df\346\eF\343.::"
 #".\23\35\275\223\226\226\347\\\275\372\30"
 #"\225*0\270\b\222tsj\355?\221$\211\361q\17++\22:\235\26\205b"
 #"\343\257\316\370\270\aQ\24\210\215]\353"
 #"\300\262[\271>@\20\4\364\372\360\r"
 #"\e\257\227N\247\225\355\375\347\257\360"
 #"\26\344wR\202B\3\313\356\315C(4?\0\327a"
 #"\353^S\49\372\0\0\0\0IEND\256B`\202"
) 0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 10 #"jQueryPort"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"open-input-file"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"resolve-planet-path"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"planet"
0 0 24 3 1 #" "
0 0 14 3 23 #"tracer/tracer/jquery.js"
0 0 22 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 6 #"jQuery"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"port->string"
0 0 24 3 1 #" "
0 0 14 3 10 #"jQueryPort"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 12 #"tracerJSPort"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"open-input-file"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"resolve-planet-path"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"planet"
0 0 24 3 1 #" "
0 0 14 3 23 #"tracer/tracer/tracer.js"
0 0 22 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 8 #"tracerJS"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"port->string"
0 0 24 3 1 #" "
0 0 14 3 12 #"tracerJSPort"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 8 #"theTrace"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"tree->json"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"current-call"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 7 #"ceTrace"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"tree->json"
0 0 4 3 1 #" "
0 0 14 3 9 #"topCENode"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"code"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"code->json"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 6 #"offset"
0 0 4 3 1 #" "
0 0 14 3 1 #"o"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 8 #"template"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"include-template"
0 0 4 3 1 #" "
0 0 19 3 12 #"\"index.html\""
0 0 22 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 16 #"close-input-port"
0 0 24 3 1 #" "
0 0 14 3 7 #"CSSPort"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 16 #"close-input-port"
0 0 24 3 1 #" "
0 0 14 3 10 #"jQueryPort"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 16 #"close-input-port"
0 0 24 3 1 #" "
0 0 14 3 12 #"tracerJSPort"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 8 #"template"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";adds trace->json and send-url to the end of the file"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"#%module-begin"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"syntax-case"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #" "
0 0 22 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 6 #"source"
0 0 24 3 1 #" "
0 0 14 3 6 #"offset"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 20 3 2 #"#`"
0 0 22 3 1 #"("
0 0 14 3 20 #"#%plain-module-begin"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 3 #"src"
0 0 24 3 1 #" "
0 0 14 3 6 #"source"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 15 #"display-results"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 38 #";If empty trace generate error message"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"node-kids"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"current-call"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 11 #"message-box"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Error\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 19 3 1 #"\""
0 0 19 3 5 #"There"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 7 #"nothing"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 5 #"trace"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"this"
0 0 19 3 1 #" "
0 0 19 3 5 #"file."
0 0 19 3 1 #" "
0 0 19 3 3 #"Did"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 6 #"define"
0 0 19 3 1 #" "
0 0 19 3 3 #"any"
0 0 19 11 1 #" "
0 0 19 3 9 #"functions"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"this"
0 0 19 3 1 #" "
0 0 19 3 5 #"file?"
0 0 19 3 1 #" "
0 0 19 3 3 #"Are"
0 0 19 3 1 #" "
0 0 19 3 4 #"they"
0 0 19 3 1 #" "
0 0 19 3 6 #"called"
0 0 19 3 1 #" "
0 0 19 3 16 #"from this file?\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 20 3 2 #"#f"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 2 #"ok"
0 0 24 3 1 #" "
0 0 14 3 4 #"stop"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 17 #"send-url/contents"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"page"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 6 #"offset"
0 0 22 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;------------------------------------------------------------------"
 #"------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 18 #"port-write-handler"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 4 #"port"
0 0 24 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 5 #"depth"
0 0 24 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"pph lambda\""
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"pph"
0 0 19 3 1 #" "
0 0 19 3 15 #"lambda true if\""
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"print-list"
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 2 #"))"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"pph"
0 0 19 3 1 #" "
0 0 19 3 16 #"lambda false if\""
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 12 #"pretty-write"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";The code we want the above to evaluate to is"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 14 3 11 #"add-to-hash"
0 0 24 3 1 #" "
0 0 14 3 15 #"correct-ce-hash"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 13 #"function-name"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"node-result"
0 0 24 3 1 #" "
0 0 14 3 11 #"actual-node"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 8 #"sub-arg1"
0 0 24 3 1 #" "
0 0 14 3 8 #"sub-arg2"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg3"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"print-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"ppl"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"pretty-format"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"pretty-print-columns"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 22 3 1 #"["
0 0 14 3 5 #"lines"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"regexp-match*"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 1 #" "
0 0 14 3 3 #"ppl"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 22 3 1 #"["
0 0 14 3 5 #"lists"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"regexp-match*"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"list\""
0 0 24 3 1 #" "
0 0 14 3 3 #"ppl"
0 0 22 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"lines"
0 0 24 3 1 #" "
0 0 14 3 5 #"lists"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"one line per list\""
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 3 #"ppl"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 29 #";need to split into two lines"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 11 #"let*-values"
0 0 24 3 1 #" "
0 0 22 3 3 #"([("
0 0 14 3 5 #"l-beg"
0 0 24 3 1 #" "
0 0 14 3 9 #"l-end-rev"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"split-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 3 #"plh"
0 0 24 3 1 #" "
0 0 14 3 5 #"l-beg"
0 0 24 3 1 #" "
0 0 14 3 9 #"l-end-rev"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"(list\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 22 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"split-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"ceiling"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"floor"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"take-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 22 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"plh"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-fwd"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-rev"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-fwd"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"...\\n      ...\""
0 0 24 3 1 #" "
0 0 14 3 5 #"s-rev"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"plh"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-fwd"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"add-item"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-rev"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"plh"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"add-item"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-fwd"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-rev"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 24 #";both have elements left"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 3 #"plh"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 8 #"add-item"
0 0 24 3 1 #" "
0 0 14 3 3 #"fwd"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-fwd"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 8 #"add-item"
0 0 24 3 1 #" "
0 0 14 3 3 #"rev"
0 0 24 3 1 #" "
0 0 14 3 5 #"s-rev"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0           0
