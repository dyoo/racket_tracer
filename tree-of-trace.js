var theTrace = {name: "top-level",
            formals: [],
            formalsShort: [],
            actuals: [],
            actualsShort: [],
            result: "'no-result\n",
            resultShort: "'no-result\n",
            children: [{name: "count-words",
            formals: ["hello goodbye ku ku kuchu   diamonds ku goodbye \n"],
            formalsShort: ["hello goodbye ku ku kuchu   diamonds ku goodbye \n"],
            actuals: ["\"hello goodbye ku ku kuchu   diamonds ku goodbye \"\n"],
            actualsShort: ["\"hello goodbye ku ku kuchu   diamonds ku goodbye \"\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(split string)\n","empty\n"],
            formalsShort: ["(split string)\n","empty\n"],
            actuals: ["'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'()\n"],
            actualsShort: ["'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'()\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'((\"hello\" 1))\n"],
            actualsShort: ["'(\"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'((\"hello\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'((\"hello\" 1) (\"goodbye\" 1))\n"],
            actualsShort: ["'(\"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'((\"hello\" 1) (\"goodbye\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'((\"hello\" 1) (\"goodbye\" 1) (\"ku\" 1))\n"],
            actualsShort: ["'(\"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n","'((\"hello\" 1) (\"goodbye\" 1) (\"ku\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"kuchu\" \"diamonds\" \"ku\" \"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1))\n"],
            actualsShort: ["'(\"kuchu\" \"diamonds\" \"ku\" \"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"diamonds\" \"ku\" \"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n"],
            actualsShort: ["'(\"diamonds\" \"ku\" \"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"ku\" \"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            actualsShort: ["'(\"ku\" \"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            actualsShort: ["'(\"goodbye\")\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'()\n","'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n"],
            actualsShort: ["'()\n","'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: []},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"goodbye\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'((\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            result: "'((\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"goodbye\" 2)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'((\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            result: "'((\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'((\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n"],
            result: "'((\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'((\"kuchu\" 1) (\"diamonds\" 1) (\"ku\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"kuchu\" 1) (\"diamonds\" 1) (\"ku\" 1))\n"],
            result: "'((\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            resultShort: "'((\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1)\n  (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'((\"diamonds\" 1) (\"ku\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"diamonds\" 1) (\"ku\" 1))\n"],
            result: "'((\"diamonds\" 1) (\"ku\" 1) (\"goodbye\" 1))\n",
            resultShort: "'((\"diamonds\" 1) (\"ku\" 1) (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'((\"ku\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"ku\" 1))\n"],
            result: "'((\"ku\" 1) (\"goodbye\" 1))\n",
            resultShort: "'((\"ku\" 1) (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'()\n"],
            actualsShort: ["\"goodbye\"\n","'()\n"],
            result: "'((\"goodbye\" 1))\n",
            resultShort: "'((\"goodbye\" 1))\n",
            children: []}]}]}]}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"ku\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            result: "'((\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            resultShort: "'((\"goodbye\" 1)\n  (\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n"],
            result: "'((\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            resultShort: "'((\"ku\" 3)\n  (\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"ku\" 1) (\"kuchu\" 1) (\"diamonds\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"ku\" 1) (\"kuchu\" 1) (\"diamonds\" 1))\n"],
            result: "'((\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            resultShort: "'((\"ku\" 2)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1)\n  (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"kuchu\" 1) (\"diamonds\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"kuchu\" 1) (\"diamonds\" 1))\n"],
            result: "'((\"kuchu\" 1) (\"diamonds\" 1) (\"ku\" 1))\n",
            resultShort: "'((\"kuchu\" 1) (\"diamonds\" 1) (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"diamonds\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"diamonds\" 1))\n"],
            result: "'((\"diamonds\" 1) (\"ku\" 1))\n",
            resultShort: "'((\"diamonds\" 1) (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'()\n"],
            actualsShort: ["\"ku\"\n","'()\n"],
            result: "'((\"ku\" 1))\n",
            resultShort: "'((\"ku\" 1))\n",
            children: []}]}]}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"diamonds\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n"],
            actualsShort: ["\"diamonds\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"diamonds\"\n","'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n"],
            actualsShort: ["\"diamonds\"\n","'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n"],
            result: "'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n",
            resultShort: "'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"diamonds\"\n","'((\"ku\" 2) (\"ku\" 1) (\"kuchu\" 1))\n"],
            actualsShort: ["\"diamonds\"\n","'((\"ku\" 2) (\"ku\" 1) (\"kuchu\" 1))\n"],
            result: "'((\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n",
            resultShort: "'((\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1)\n  (\"diamonds\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"diamonds\"\n","'((\"ku\" 1) (\"kuchu\" 1))\n"],
            actualsShort: ["\"diamonds\"\n","'((\"ku\" 1) (\"kuchu\" 1))\n"],
            result: "'((\"ku\" 1) (\"kuchu\" 1) (\"diamonds\" 1))\n",
            resultShort: "'((\"ku\" 1) (\"kuchu\" 1) (\"diamonds\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"diamonds\"\n","'((\"kuchu\" 1))\n"],
            actualsShort: ["\"diamonds\"\n","'((\"kuchu\" 1))\n"],
            result: "'((\"kuchu\" 1) (\"diamonds\" 1))\n",
            resultShort: "'((\"kuchu\" 1) (\"diamonds\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"diamonds\"\n","'()\n"],
            actualsShort: ["\"diamonds\"\n","'()\n"],
            result: "'((\"diamonds\" 1))\n",
            resultShort: "'((\"diamonds\" 1))\n",
            children: []}]}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"kuchu\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1))\n"],
            actualsShort: ["\"kuchu\"\n","'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"kuchu\"\n","'((\"goodbye\" 1) (\"ku\" 2) (\"ku\" 1))\n"],
            actualsShort: ["\"kuchu\"\n","'((\"goodbye\" 1) (\"ku\" 2) (\"ku\" 1))\n"],
            result: "'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n",
            resultShort: "'((\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1)\n  (\"kuchu\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"kuchu\"\n","'((\"ku\" 2) (\"ku\" 1))\n"],
            actualsShort: ["\"kuchu\"\n","'((\"ku\" 2) (\"ku\" 1))\n"],
            result: "'((\"ku\" 2) (\"ku\" 1) (\"kuchu\" 1))\n",
            resultShort: "'((\"ku\" 2) (\"ku\" 1) (\"kuchu\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"kuchu\"\n","'((\"ku\" 1))\n"],
            actualsShort: ["\"kuchu\"\n","'((\"ku\" 1))\n"],
            result: "'((\"ku\" 1) (\"kuchu\" 1))\n",
            resultShort: "'((\"ku\" 1) (\"kuchu\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"kuchu\"\n","'()\n"],
            actualsShort: ["\"kuchu\"\n","'()\n"],
            result: "'((\"kuchu\" 1))\n",
            resultShort: "'((\"kuchu\" 1))\n",
            children: []}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"ku\"\n","'((\"hello\" 1) (\"goodbye\" 1) (\"ku\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"hello\" 1) (\"goodbye\" 1) (\"ku\" 1))\n"],
            result: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1))\n",
            resultShort: "'((\"hello\" 1)\n  (\"goodbye\" 1)\n  (\"ku\" 2)\n  (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"goodbye\" 1) (\"ku\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"goodbye\" 1) (\"ku\" 1))\n"],
            result: "'((\"goodbye\" 1) (\"ku\" 2) (\"ku\" 1))\n",
            resultShort: "'((\"goodbye\" 1) (\"ku\" 2) (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"ku\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"ku\" 1))\n"],
            result: "'((\"ku\" 2) (\"ku\" 1))\n",
            resultShort: "'((\"ku\" 2) (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'()\n"],
            actualsShort: ["\"ku\"\n","'()\n"],
            result: "'((\"ku\" 1))\n",
            resultShort: "'((\"ku\" 1))\n",
            children: []}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"ku\"\n","'((\"hello\" 1) (\"goodbye\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"hello\" 1) (\"goodbye\" 1))\n"],
            result: "'((\"hello\" 1) (\"goodbye\" 1) (\"ku\" 1))\n",
            resultShort: "'((\"hello\" 1) (\"goodbye\" 1) (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'((\"goodbye\" 1))\n"],
            actualsShort: ["\"ku\"\n","'((\"goodbye\" 1))\n"],
            result: "'((\"goodbye\" 1) (\"ku\" 1))\n",
            resultShort: "'((\"goodbye\" 1) (\"ku\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"ku\"\n","'()\n"],
            actualsShort: ["\"ku\"\n","'()\n"],
            result: "'((\"ku\" 1))\n",
            resultShort: "'((\"ku\" 1))\n",
            children: []}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"goodbye\"\n","'((\"hello\" 1))\n"],
            actualsShort: ["\"goodbye\"\n","'((\"hello\" 1))\n"],
            result: "'((\"hello\" 1) (\"goodbye\" 1))\n",
            resultShort: "'((\"hello\" 1) (\"goodbye\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"goodbye\"\n","'()\n"],
            actualsShort: ["\"goodbye\"\n","'()\n"],
            result: "'((\"goodbye\" 1))\n",
            resultShort: "'((\"goodbye\" 1))\n",
            children: []}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"hello\"\n","'()\n"],
            actualsShort: ["\"hello\"\n","'()\n"],
            result: "'((\"hello\" 1))\n",
            resultShort: "'((\"hello\" 1))\n",
            children: []}]},{name: "split",
            formals: ["string\n"],
            formalsShort: ["string\n"],
            actuals: ["\"hello goodbye ku ku kuchu   diamonds ku goodbye \"\n"],
            actualsShort: ["\"hello goodbye ku ku kuchu   diamonds ku goodbye \"\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(string->list str)\n","empty\n","empty\n"],
            formalsShort: ["(string->list str)\n","empty\n","empty\n"],
            actuals: ["'(#\\h\n  #\\e\n  #\\l\n  #\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'()\n"],
            actualsShort: ["'(#\\h\n  #\\e\n  #\\l\n  #\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'()\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\l\n  #\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\h)\n","'()\n"],
            actualsShort: ["'(#\\e\n  #\\l\n  #\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\h)\n","'()\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\l\n  #\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\e #\\h)\n","'()\n"],
            actualsShort: ["'(#\\l\n  #\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\e #\\h)\n","'()\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\l #\\e #\\h)\n","'()\n"],
            actualsShort: ["'(#\\l\n  #\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\l #\\e #\\h)\n","'()\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\l #\\l #\\e #\\h)\n","'()\n"],
            actualsShort: ["'(#\\o\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\l #\\l #\\e #\\h)\n","'()\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\l #\\l #\\e #\\h)\n","'()\n"],
            actualsShort: ["'(#\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\l #\\l #\\e #\\h)\n","'()\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\g)\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\g)\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\g)\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\g)\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\o #\\g)\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\o #\\g)\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\b\n  #\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\b #\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\y\n  #\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\b #\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\e\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\e #\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\e #\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\k\n  #\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\u\n  #\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\k\n  #\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\u\n  #\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\c\n  #\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\c #\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\h\n  #\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\c #\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\h #\\c #\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\u\n  #\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\h #\\c #\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\h #\\c #\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\h #\\c #\\u #\\k)\n","'(\"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","current-word\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","current-word\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","current-word\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","current-word\n","found-words\n"],
            actuals: ["'(#\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\d\n  #\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\i\n  #\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\a\n  #\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\m\n  #\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\o\n  #\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\n\n  #\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\n #\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\d\n  #\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\n #\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\d #\\n #\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\s\n  #\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\d #\\n #\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\s #\\d #\\n #\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\s #\\d #\\n #\\o #\\m #\\a #\\i #\\d)\n","'(\"kuchu\" \"ku\" \"ku\" \"goodbye\" \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\k\n  #\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'()\n","'(\"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\u\n  #\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\k)\n","'(\"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\space\n  #\\g\n  #\\o\n  #\\o\n  #\\d\n  #\\b\n  #\\y\n  #\\e\n  #\\space)\n","'(#\\u #\\k)\n","'(\"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\g #\\o #\\o #\\d #\\b #\\y #\\e #\\space)\n","'()\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\g #\\o #\\o #\\d #\\b #\\y #\\e #\\space)\n","'()\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o #\\o #\\d #\\b #\\y #\\e #\\space)\n","'(#\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\o #\\o #\\d #\\b #\\y #\\e #\\space)\n","'(#\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o #\\d #\\b #\\y #\\e #\\space)\n","'(#\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\o #\\d #\\b #\\y #\\e #\\space)\n","'(#\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\d #\\b #\\y #\\e #\\space)\n","'(#\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\d #\\b #\\y #\\e #\\space)\n","'(#\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\b #\\y #\\e #\\space)\n","'(#\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\b #\\y #\\e #\\space)\n","'(#\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\y #\\e #\\space)\n","'(#\\b #\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\y #\\e #\\space)\n","'(#\\b #\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e #\\space)\n","'(#\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\e #\\space)\n","'(#\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space)\n","'(#\\e #\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'(#\\space)\n","'(#\\e #\\y #\\b #\\d #\\o #\\o #\\g)\n","'(\"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'()\n","'()\n","'(\"goodbye\"\n  \"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            actualsShort: ["'()\n","'()\n","'(\"goodbye\"\n  \"ku\"\n  \"diamonds\"\n  \"kuchu\"\n  \"ku\"\n  \"ku\"\n  \"goodbye\"\n  \"hello\")\n"],
            result: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            resultShort: "'(\"hello\"\n  \"goodbye\"\n  \"ku\"\n  \"ku\"\n  \"kuchu\"\n  \"diamonds\"\n  \"ku\"\n  \"goodbye\")\n",
            children: []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{name: "count-words",
            formals: ["one two three three four five  one one one\n"],
            formalsShort: ["one two three three four five  one one one\n"],
            actuals: ["\"one two three three four five  one one one\"\n"],
            actualsShort: ["\"one two three three four five  one one one\"\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(split string)\n","empty\n"],
            formalsShort: ["(split string)\n","empty\n"],
            actuals: ["'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'()\n"],
            actualsShort: ["'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'()\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'((\"one\" 1))\n"],
            actualsShort: ["'(\"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'((\"one\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'((\"one\" 1) (\"two\" 1))\n"],
            actualsShort: ["'(\"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'((\"one\" 1) (\"two\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'((\"one\" 1) (\"two\" 1) (\"three\" 1))\n"],
            actualsShort: ["'(\"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n","'((\"one\" 1) (\"two\" 1) (\"three\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"four\" \"five\" \"one\" \"one\" \"one\")\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1))\n"],
            actualsShort: ["'(\"four\" \"five\" \"one\" \"one\" \"one\")\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"five\" \"one\" \"one\" \"one\")\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n"],
            actualsShort: ["'(\"five\" \"one\" \"one\" \"one\")\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"one\" \"one\" \"one\")\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            actualsShort: ["'(\"one\" \"one\" \"one\")\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"one\" \"one\")\n","'((\"one\" 2)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            actualsShort: ["'(\"one\" \"one\")\n","'((\"one\" 2)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'(\"one\")\n","'((\"one\" 3)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            actualsShort: ["'(\"one\")\n","'((\"one\" 3)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "iter",
            formals: ["(rest words)\n","(add (first words) store)\n"],
            formalsShort: ["(rest words)\n","(add (first words) store)\n"],
            actuals: ["'()\n","'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            actualsShort: ["'()\n","'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: []},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"one\"\n","'((\"one\" 3)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"one\" 3)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            result: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 4)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            result: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            result: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            result: "'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n"],
            result: "'((\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"five\" 1) (\"one\" 2) (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"five\" 1) (\"one\" 2) (\"one\" 1))\n"],
            result: "'((\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"five\" 1)\n  (\"one\" 3)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"one\" 2) (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"one\" 2) (\"one\" 1))\n"],
            result: "'((\"one\" 3) (\"one\" 2) (\"one\" 1))\n",
            resultShort: "'((\"one\" 3) (\"one\" 2) (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"one\" 1))\n"],
            result: "'((\"one\" 2) (\"one\" 1))\n",
            resultShort: "'((\"one\" 2) (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'()\n"],
            actualsShort: ["\"one\"\n","'()\n"],
            result: "'((\"one\" 1))\n",
            resultShort: "'((\"one\" 1))\n",
            children: []}]}]}]}]}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"one\"\n","'((\"one\" 2)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"one\" 2)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            result: "'((\"one\" 3)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 3)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            result: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            result: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n"],
            result: "'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"four\" 1) (\"five\" 1) (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"four\" 1) (\"five\" 1) (\"one\" 1))\n"],
            result: "'((\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            resultShort: "'((\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 2)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"five\" 1) (\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"five\" 1) (\"one\" 1))\n"],
            result: "'((\"five\" 1) (\"one\" 2) (\"one\" 1))\n",
            resultShort: "'((\"five\" 1) (\"one\" 2) (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"one\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"one\" 1))\n"],
            result: "'((\"one\" 2) (\"one\" 1))\n",
            resultShort: "'((\"one\" 2) (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'()\n"],
            actualsShort: ["\"one\"\n","'()\n"],
            result: "'((\"one\" 1))\n",
            resultShort: "'((\"one\" 1))\n",
            children: []}]}]}]}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"one\"\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            result: "'((\"one\" 2)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            resultShort: "'((\"one\" 2)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            result: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            resultShort: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n"],
            result: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            resultShort: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"three\" 1) (\"four\" 1) (\"five\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"three\" 1) (\"four\" 1) (\"five\" 1))\n"],
            result: "'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            resultShort: "'((\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1)\n  (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"four\" 1) (\"five\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"four\" 1) (\"five\" 1))\n"],
            result: "'((\"four\" 1) (\"five\" 1) (\"one\" 1))\n",
            resultShort: "'((\"four\" 1) (\"five\" 1) (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'((\"five\" 1))\n"],
            actualsShort: ["\"one\"\n","'((\"five\" 1))\n"],
            result: "'((\"five\" 1) (\"one\" 1))\n",
            resultShort: "'((\"five\" 1) (\"one\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"one\"\n","'()\n"],
            actualsShort: ["\"one\"\n","'()\n"],
            result: "'((\"one\" 1))\n",
            resultShort: "'((\"one\" 1))\n",
            children: []}]}]}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"five\"\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n"],
            actualsShort: ["\"five\"\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n"],
            result: "'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n",
            resultShort: "'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"five\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n"],
            actualsShort: ["\"five\"\n","'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n"],
            result: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n",
            resultShort: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"five\"\n","'((\"three\" 2) (\"three\" 1) (\"four\" 1))\n"],
            actualsShort: ["\"five\"\n","'((\"three\" 2) (\"three\" 1) (\"four\" 1))\n"],
            result: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n",
            resultShort: "'((\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1)\n  (\"five\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"five\"\n","'((\"three\" 1) (\"four\" 1))\n"],
            actualsShort: ["\"five\"\n","'((\"three\" 1) (\"four\" 1))\n"],
            result: "'((\"three\" 1) (\"four\" 1) (\"five\" 1))\n",
            resultShort: "'((\"three\" 1) (\"four\" 1) (\"five\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"five\"\n","'((\"four\" 1))\n"],
            actualsShort: ["\"five\"\n","'((\"four\" 1))\n"],
            result: "'((\"four\" 1) (\"five\" 1))\n",
            resultShort: "'((\"four\" 1) (\"five\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"five\"\n","'()\n"],
            actualsShort: ["\"five\"\n","'()\n"],
            result: "'((\"five\" 1))\n",
            resultShort: "'((\"five\" 1))\n",
            children: []}]}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"four\"\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1))\n"],
            actualsShort: ["\"four\"\n","'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1))\n"],
            result: "'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n",
            resultShort: "'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"four\"\n","'((\"two\" 1) (\"three\" 2) (\"three\" 1))\n"],
            actualsShort: ["\"four\"\n","'((\"two\" 1) (\"three\" 2) (\"three\" 1))\n"],
            result: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n",
            resultShort: "'((\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1)\n  (\"four\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"four\"\n","'((\"three\" 2) (\"three\" 1))\n"],
            actualsShort: ["\"four\"\n","'((\"three\" 2) (\"three\" 1))\n"],
            result: "'((\"three\" 2) (\"three\" 1) (\"four\" 1))\n",
            resultShort: "'((\"three\" 2) (\"three\" 1) (\"four\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"four\"\n","'((\"three\" 1))\n"],
            actualsShort: ["\"four\"\n","'((\"three\" 1))\n"],
            result: "'((\"three\" 1) (\"four\" 1))\n",
            resultShort: "'((\"three\" 1) (\"four\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"four\"\n","'()\n"],
            actualsShort: ["\"four\"\n","'()\n"],
            result: "'((\"four\" 1))\n",
            resultShort: "'((\"four\" 1))\n",
            children: []}]}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"three\"\n","'((\"one\" 1) (\"two\" 1) (\"three\" 1))\n"],
            actualsShort: ["\"three\"\n","'((\"one\" 1) (\"two\" 1) (\"three\" 1))\n"],
            result: "'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1))\n",
            resultShort: "'((\"one\" 1)\n  (\"two\" 1)\n  (\"three\" 2)\n  (\"three\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"three\"\n","'((\"two\" 1) (\"three\" 1))\n"],
            actualsShort: ["\"three\"\n","'((\"two\" 1) (\"three\" 1))\n"],
            result: "'((\"two\" 1) (\"three\" 2) (\"three\" 1))\n",
            resultShort: "'((\"two\" 1) (\"three\" 2) (\"three\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"three\"\n","'((\"three\" 1))\n"],
            actualsShort: ["\"three\"\n","'((\"three\" 1))\n"],
            result: "'((\"three\" 2) (\"three\" 1))\n",
            resultShort: "'((\"three\" 2) (\"three\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"three\"\n","'()\n"],
            actualsShort: ["\"three\"\n","'()\n"],
            result: "'((\"three\" 1))\n",
            resultShort: "'((\"three\" 1))\n",
            children: []}]}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"three\"\n","'((\"one\" 1) (\"two\" 1))\n"],
            actualsShort: ["\"three\"\n","'((\"one\" 1) (\"two\" 1))\n"],
            result: "'((\"one\" 1) (\"two\" 1) (\"three\" 1))\n",
            resultShort: "'((\"one\" 1) (\"two\" 1) (\"three\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"three\"\n","'((\"two\" 1))\n"],
            actualsShort: ["\"three\"\n","'((\"two\" 1))\n"],
            result: "'((\"two\" 1) (\"three\" 1))\n",
            resultShort: "'((\"two\" 1) (\"three\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"three\"\n","'()\n"],
            actualsShort: ["\"three\"\n","'()\n"],
            result: "'((\"three\" 1))\n",
            resultShort: "'((\"three\" 1))\n",
            children: []}]}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"two\"\n","'((\"one\" 1))\n"],
            actualsShort: ["\"two\"\n","'((\"one\" 1))\n"],
            result: "'((\"one\" 1) (\"two\" 1))\n",
            resultShort: "'((\"one\" 1) (\"two\" 1))\n",
            children: [{name: "add",
            formals: ["word\n","(rest store)\n"],
            formalsShort: ["word\n","(rest store)\n"],
            actuals: ["\"two\"\n","'()\n"],
            actualsShort: ["\"two\"\n","'()\n"],
            result: "'((\"two\" 1))\n",
            resultShort: "'((\"two\" 1))\n",
            children: []}]}]},{name: "add",
            formals: ["(first words)\n","store\n"],
            formalsShort: ["(first words)\n","store\n"],
            actuals: ["\"one\"\n","'()\n"],
            actualsShort: ["\"one\"\n","'()\n"],
            result: "'((\"one\" 1))\n",
            resultShort: "'((\"one\" 1))\n",
            children: []}]},{name: "split",
            formals: ["string\n"],
            formalsShort: ["string\n"],
            actuals: ["\"one two three three four five  one one one\"\n"],
            actualsShort: ["\"one two three three four five  one one one\"\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(string->list str)\n","empty\n","empty\n"],
            formalsShort: ["(string->list str)\n","empty\n","empty\n"],
            actuals: ["'(#\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'()\n"],
            actualsShort: ["'(#\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'()\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\n\n  #\\e\n  #\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o)\n","'()\n"],
            actualsShort: ["'(#\\n\n  #\\e\n  #\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o)\n","'()\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\n #\\o)\n","'()\n"],
            actualsShort: ["'(#\\e\n  #\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\n #\\o)\n","'()\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\n #\\o)\n","'()\n"],
            actualsShort: ["'(#\\space\n  #\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\n #\\o)\n","'()\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"one\")\n"],
            actualsShort: ["'(#\\t\n  #\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\t)\n","'(\"one\")\n"],
            actualsShort: ["'(#\\w\n  #\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\t)\n","'(\"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\w #\\t)\n","'(\"one\")\n"],
            actualsShort: ["'(#\\o\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\w #\\t)\n","'(\"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o #\\w #\\t)\n","'(\"one\")\n"],
            actualsShort: ["'(#\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o #\\w #\\t)\n","'(\"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"two\" \"one\")\n"],
            actualsShort: ["'(#\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\t)\n","'(\"two\" \"one\")\n"],
            actualsShort: ["'(#\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\t)\n","'(\"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\h #\\t)\n","'(\"two\" \"one\")\n"],
            actualsShort: ["'(#\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\h #\\t)\n","'(\"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\r #\\h #\\t)\n","'(\"two\" \"one\")\n"],
            actualsShort: ["'(#\\e\n  #\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\r #\\h #\\t)\n","'(\"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\r #\\h #\\t)\n","'(\"two\" \"one\")\n"],
            actualsShort: ["'(#\\e\n  #\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\r #\\h #\\t)\n","'(\"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\e #\\r #\\h #\\t)\n","'(\"two\" \"one\")\n"],
            actualsShort: ["'(#\\space\n  #\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\e #\\r #\\h #\\t)\n","'(\"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\t\n  #\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\h\n  #\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\r\n  #\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\r #\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\e\n  #\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\r #\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\r #\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\e\n  #\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\r #\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\e #\\r #\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\space\n  #\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\e #\\r #\\h #\\t)\n","'(\"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\f\n  #\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\o\n  #\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o #\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\u\n  #\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o #\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\u #\\o #\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\r\n  #\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\u #\\o #\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\r #\\u #\\o #\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\space\n  #\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\r #\\u #\\o #\\f)\n","'(\"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\f\n  #\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\i\n  #\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\i #\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\v\n  #\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\i #\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\v #\\i #\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\e\n  #\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\v #\\i #\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\v #\\i #\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            actualsShort: ["'(#\\space\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\v #\\i #\\f)\n","'(\"four\" \"three\" \"three\" \"two\" \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","current-word\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","current-word\n","found-words\n"],
            actuals: ["'(#\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'()\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o)\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\o)\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\n #\\o)\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\n #\\o)\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\n #\\o)\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\space\n  #\\o\n  #\\n\n  #\\e\n  #\\space\n  #\\o\n  #\\n\n  #\\e)\n","'(#\\e #\\n #\\o)\n","'(\"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\o #\\n #\\e #\\space #\\o #\\n #\\e)\n","'()\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\o #\\n #\\e #\\space #\\o #\\n #\\e)\n","'()\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\n #\\e #\\space #\\o #\\n #\\e)\n","'(#\\o)\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\n #\\e #\\space #\\o #\\n #\\e)\n","'(#\\o)\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e #\\space #\\o #\\n #\\e)\n","'(#\\n #\\o)\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\e #\\space #\\o #\\n #\\e)\n","'(#\\n #\\o)\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\space #\\o #\\n #\\e)\n","'(#\\e #\\n #\\o)\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\space #\\o #\\n #\\e)\n","'(#\\e #\\n #\\o)\n","'(\"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            formalsShort: ["(rest remaining)\n","empty\n","(cons\n (list->string (reverse current-word))\n found-words)\n"],
            actuals: ["'(#\\o #\\n #\\e)\n","'()\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\o #\\n #\\e)\n","'()\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\n #\\e)\n","'(#\\o)\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\n #\\e)\n","'(#\\o)\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'(#\\e)\n","'(#\\n #\\o)\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'(#\\e)\n","'(#\\n #\\o)\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: [{name: "iter",
            formals: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            formalsShort: ["(rest remaining)\n","(cons (first remaining) current-word)\n","found-words\n"],
            actuals: ["'()\n","'(#\\e #\\n #\\o)\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            actualsShort: ["'()\n","'(#\\e #\\n #\\o)\n","'(\"one\"\n  \"one\"\n  \"five\"\n  \"four\"\n  \"three\"\n  \"three\"\n  \"two\"\n  \"one\")\n"],
            result: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            resultShort: "'(\"one\"\n  \"two\"\n  \"three\"\n  \"three\"\n  \"four\"\n  \"five\"\n  \"one\"\n  \"one\"\n  \"one\")\n",
            children: []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}